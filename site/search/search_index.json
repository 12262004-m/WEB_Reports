{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0412 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043e\u0442\u0447\u0435\u0442\u044b \u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u043a\u0443\u0440\u0441\u0443 \"WEB-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\" \u0422\u0435\u043c\u044b \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442: \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 30.09 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0438 CRUD. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 04.10 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 04.10 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 02.12","title":"\u041a\u0440\u0430\u0442\u043a\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442\u0430\u0445"},{"location":"#web-","text":"","title":"\u0412 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043e\u0442\u0447\u0435\u0442\u044b \u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u043a\u0443\u0440\u0441\u0443 \"WEB-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\""},{"location":"#_1","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 30.09 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0438 CRUD. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 04.10 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 04.10 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435. \u0414\u0435\u0434\u043b\u0430\u0439\u043d - 02.12","title":"\u0422\u0435\u043c\u044b \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442:"},{"location":"LR_1/task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. UDP-\u0441\u0435\u0440\u0432\u0435\u0440 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: server.py import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_socket.bind((\"localhost\", 1234)) print(\"Server started\") client_message, client_address = server_socket.recvfrom(1024) print(\"Recieved message:\", client_message.decode()) server_socket.sendto(\"Hello, client\".encode(), client_address) client.py import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) client_socket.sendto(\"Hello, server\".encode(), (\"localhost\", 1234)) server_message, server_address = client_socket.recvfrom(1024) print(\"Recieved message:\", server_message.decode()) \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u043e\u0441\u0442\u043e\u0439 UDP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u043d \u0436\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432 \u043e\u0442\u0432\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0435\u0439\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 SOCK_DGRAM, \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP. \u0422\u0430\u043a\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u044b \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u044f\u0432\u043d\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u043a\u0435\u0442\u0443 \u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"LR_1/task1/#no1-udp-","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. UDP-\u0441\u0435\u0440\u0432\u0435\u0440"},{"location":"LR_1/task1/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:"},{"location":"LR_1/task1/#_2","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"LR_1/task1/#_3","text":"","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"LR_1/task1/#serverpy","text":"import socket server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) server_socket.bind((\"localhost\", 1234)) print(\"Server started\") client_message, client_address = server_socket.recvfrom(1024) print(\"Recieved message:\", client_message.decode()) server_socket.sendto(\"Hello, client\".encode(), client_address)","title":"server.py"},{"location":"LR_1/task1/#clientpy","text":"import socket client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) client_socket.sendto(\"Hello, server\".encode(), (\"localhost\", 1234)) server_message, server_address = client_socket.recvfrom(1024) print(\"Recieved message:\", server_message.decode())","title":"client.py"},{"location":"LR_1/task1/#_4","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u043e\u0441\u0442\u043e\u0439 UDP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u043d \u0436\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432 \u043e\u0442\u0432\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0435\u0439\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 SOCK_DGRAM, \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP. \u0422\u0430\u043a\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u044b \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u044f\u0432\u043d\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u043a\u0435\u0442\u0443 \u0438, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u043a\u0435\u0442\u0430.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"LR_1/task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438,\u043e\u043a\u0442\u043e\u0440\u0443\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0443, (\u043e\u0442\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u044f\u0441\u044c \u043e\u0442 \u043c\u043e\u0435\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430) \u0431\u044b\u043b\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: server.py import socket def trapezoid_area(a_side, b_side, h_side): return (a_side + b_side)*h_side/2 with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket: server_socket.bind((\"localhost\", 1234)) server_socket.listen() print(\"Server started\") client_connection, client_address = server_socket.accept() with client_connection: client_message = client_connection.recv(1024).decode() a, b, h = client_message.split(',') client_connection.sendall(str(trapezoid_area(float(a), float(b), float(h))).encode()) print(\"Client got the result\") client.py import socket a = input(\"Enter the first side (a): \") b = input(\"Enter the second side (b): \") h = input(\"Enter height (h): \") with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket: client_socket.connect((\"localhost\", 1234)) client_socket.sendall(f\"{a}, {b}, {h}\".encode()) server_message = client_socket.recv(1024) print(f\"The area of the trapezoid: {server_message.decode()}\") \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u043e\u0441\u0442\u043e\u0439 TCP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043b \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b \u0440\u0430\u0441\u0447\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u043b \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 SOCK_STREAM, \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP. \u0422\u0430\u043a\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442 \u043f\u043e\u0442\u043e\u043a \u0431\u0430\u0439\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c - \u0442.\u0435. \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"LR_1/task2/#no2-tcp-","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. TCP-\u0441\u0435\u0440\u0432\u0435\u0440"},{"location":"LR_1/task2/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438,\u043e\u043a\u0442\u043e\u0440\u0443\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0443, (\u043e\u0442\u0442\u0430\u043b\u043a\u0438\u0432\u0430\u044f\u0441\u044c \u043e\u0442 \u043c\u043e\u0435\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430) \u0431\u044b\u043b\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:"},{"location":"LR_1/task2/#_2","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"LR_1/task2/#_3","text":"","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"LR_1/task2/#serverpy","text":"import socket def trapezoid_area(a_side, b_side, h_side): return (a_side + b_side)*h_side/2 with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket: server_socket.bind((\"localhost\", 1234)) server_socket.listen() print(\"Server started\") client_connection, client_address = server_socket.accept() with client_connection: client_message = client_connection.recv(1024).decode() a, b, h = client_message.split(',') client_connection.sendall(str(trapezoid_area(float(a), float(b), float(h))).encode()) print(\"Client got the result\")","title":"server.py"},{"location":"LR_1/task2/#clientpy","text":"import socket a = input(\"Enter the first side (a): \") b = input(\"Enter the second side (b): \") h = input(\"Enter height (h): \") with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket: client_socket.connect((\"localhost\", 1234)) client_socket.sendall(f\"{a}, {b}, {h}\".encode()) server_message = client_socket.recv(1024) print(f\"The area of the trapezoid: {server_message.decode()}\")","title":"client.py"},{"location":"LR_1/task2/#_4","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0440\u043e\u0441\u0442\u043e\u0439 TCP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u0432\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043b \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b \u0440\u0430\u0441\u0447\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u043b \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0442\u043e\u043a\u043e\u0432\u044b\u0439 \u0441\u043e\u043a\u0435\u0442 SOCK_STREAM, \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP. \u0422\u0430\u043a\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442 \u043f\u043e\u0442\u043e\u043a \u0431\u0430\u0439\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u0432\u0443\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c - \u0442.\u0435. \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"LR_1/task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. HTML-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: server.py import socket with open('index.html', 'r') as file: html_content = file.read() response = f\"\"\"HTTP/1.1 200 OK Content-Type: text/html Content-Length: {len(html_content)} {html_content}\"\"\" with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket: server_socket.bind(('127.0.0.1', 8080)) server_socket.listen() print(\"Server started\") while True: connection, address = server_socket.accept() with connection: print(connection.recv(1024).decode()) connection.sendall(response.encode()) connection.close() index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> </head> <body> <center> <h1> Hello! </h1></center> </body> </html> \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u0440\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u044b\u043b\u043e \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0445\u043e\u0441\u0442\u0435 \u0438 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u043c ip \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 HTTP, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0433\u043e index.html \u0444\u0430\u0439\u043b\u0430","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"LR_1/task3/#no3-html-","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. HTML-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435"},{"location":"LR_1/task3/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443, \u0438 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:"},{"location":"LR_1/task3/#_2","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"LR_1/task3/#_3","text":"","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"LR_1/task3/#serverpy","text":"import socket with open('index.html', 'r') as file: html_content = file.read() response = f\"\"\"HTTP/1.1 200 OK Content-Type: text/html Content-Length: {len(html_content)} {html_content}\"\"\" with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket: server_socket.bind(('127.0.0.1', 8080)) server_socket.listen() print(\"Server started\") while True: connection, address = server_socket.accept() with connection: print(connection.recv(1024).decode()) connection.sendall(response.encode()) connection.close()","title":"server.py"},{"location":"LR_1/task3/#indexhtml","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> </head> <body> <center> <h1> Hello! </h1></center> </body> </html>","title":"index.html"},{"location":"LR_1/task3/#_4","text":"\u041f\u0440\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u044b\u043b\u043e \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u0445\u043e\u0441\u0442\u0435 \u0438 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u043c ip \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 HTTP, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u0433\u043e index.html \u0444\u0430\u0439\u043b\u0430","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"LR_1/task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164. \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP: 100% \u0431\u0430\u043b\u043b\u043e\u0432. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP: 80% \u0431\u0430\u043b\u043b\u043e\u0432. \u0414\u043b\u044f UDP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 threading \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435. \u0414\u043b\u044f TCP \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: server.py import socket import threading clients = {} def new_client(connection, address): print(f\"New connection: {address}\") connection.send(\"Welcome! Enter your name or nickname: \".encode()) name = connection.recv(1024).decode() clients[connection] = name if len(clients.values()) == 1: connection.send(f\"Hello, {name}!\".encode()) else: connection.send(f\"Hello, {name}! {', '.join(clients.values())} are in the chat\".encode()) send_to_all(f\"{name} is online\", connection) while True: try: message = connection.recv(1024).decode() if not message: break send_to_all(f\"{name}: {message}\", connection) except: break connection.close() del clients[connection] client_left(name) print(f\"Closed connection: {address}\") def client_left(name): for client in clients: try: client.send(f\"{name} left chat\".encode()) except: break def send_to_all(message, sender_connection): for client in clients: if client != sender_connection: try: client.send(message.encode()) except: client.close() clients.pop(client) server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('127.0.0.1', 1234)) server_socket.listen() print(\"Server started\") while True: client_connection, client_address = server_socket.accept() thread = threading.Thread(target=new_client, args=(client_connection, client_address)) thread.start() client.py import socket import threading def receive_messages(client_socket): while True: try: client_message = client_socket.recv(1024) if not client_message: break print(client_message.decode()) except: break with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket: client_socket.connect(('127.0.0.1', 1234)) threading.Thread(target=receive_messages, args=(client_socket,)).start() while True: client_message = input() if client_message.lower() == 'exit': client_socket.close() break client_socket.send(client_message.encode()) \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u044b\u043b\u043e \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c TCP \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430. \u0423 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0432\u0438\u0434\u0435\u0442\u044c \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0442\u043d\u0438\u043a\u043e\u0432 \u0447\u0430\u0442\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0436\u0435\u043b\u0430\u043d\u0438\u0438 \u0432\u044b\u0445\u043e\u0434\u0438\u0442\u044c \u0438\u0437 \u0447\u0430\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0434\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \"exit\". \u0415\u0441\u043b\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0431\u044b\u043b\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 (\u0441 \u0435\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0438 \u0430\u0434\u0440\u0435\u0441\u043e\u043c), \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0447\u0430\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0438 \u0432\u044b\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043f\u0443\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u041a\u0430\u0436\u0434\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u0432\u0438\u0434\u0435\u0442\u044c, \u043a\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u043d\u043b\u0430\u0439\u043d, \u043a\u0442\u043e \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442, \u0430 \u043a\u0442\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"LR_1/task4/#no4","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164. \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442"},{"location":"LR_1/task4/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:"},{"location":"LR_1/task4/#_2","text":"\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"LR_1/task4/#_3","text":"\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP: 100% \u0431\u0430\u043b\u043b\u043e\u0432. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b UDP: 80% \u0431\u0430\u043b\u043b\u043e\u0432. \u0414\u043b\u044f UDP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 threading \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0435. \u0414\u043b\u044f TCP \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:"},{"location":"LR_1/task4/#_4","text":"","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"LR_1/task4/#serverpy","text":"import socket import threading clients = {} def new_client(connection, address): print(f\"New connection: {address}\") connection.send(\"Welcome! Enter your name or nickname: \".encode()) name = connection.recv(1024).decode() clients[connection] = name if len(clients.values()) == 1: connection.send(f\"Hello, {name}!\".encode()) else: connection.send(f\"Hello, {name}! {', '.join(clients.values())} are in the chat\".encode()) send_to_all(f\"{name} is online\", connection) while True: try: message = connection.recv(1024).decode() if not message: break send_to_all(f\"{name}: {message}\", connection) except: break connection.close() del clients[connection] client_left(name) print(f\"Closed connection: {address}\") def client_left(name): for client in clients: try: client.send(f\"{name} left chat\".encode()) except: break def send_to_all(message, sender_connection): for client in clients: if client != sender_connection: try: client.send(message.encode()) except: client.close() clients.pop(client) server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('127.0.0.1', 1234)) server_socket.listen() print(\"Server started\") while True: client_connection, client_address = server_socket.accept() thread = threading.Thread(target=new_client, args=(client_connection, client_address)) thread.start()","title":"server.py"},{"location":"LR_1/task4/#clientpy","text":"import socket import threading def receive_messages(client_socket): while True: try: client_message = client_socket.recv(1024) if not client_message: break print(client_message.decode()) except: break with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket: client_socket.connect(('127.0.0.1', 1234)) threading.Thread(target=receive_messages, args=(client_socket,)).start() while True: client_message = input() if client_message.lower() == 'exit': client_socket.close() break client_socket.send(client_message.encode())","title":"client.py"},{"location":"LR_1/task4/#_5","text":"\u041f\u0440\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u044b\u043b\u043e \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c TCP \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430. \u0423 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0432\u0438\u0434\u0435\u0442\u044c \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0442\u043d\u0438\u043a\u043e\u0432 \u0447\u0430\u0442\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0436\u0435\u043b\u0430\u043d\u0438\u0438 \u0432\u044b\u0445\u043e\u0434\u0438\u0442\u044c \u0438\u0437 \u0447\u0430\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0434\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \"exit\". \u0415\u0441\u043b\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0431\u044b\u043b\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 (\u0441 \u0435\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0438 \u0430\u0434\u0440\u0435\u0441\u043e\u043c), \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0447\u0430\u0442\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0431 \u044d\u0442\u043e\u043c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0438 \u0432\u044b\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043f\u0443\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u041a\u0430\u0436\u0434\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u0435\u0442 \u0432\u0438\u0434\u0435\u0442\u044c, \u043a\u0442\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u043d\u043b\u0430\u0439\u043d, \u043a\u0442\u043e \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442, \u0430 \u043a\u0442\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"LR_1/task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: * \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. * \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: server.py import socket import threading grades = {} def generate_html(): response = \"\"\" <html> <head> <title>Disciplines grades</title> <style> body { font-family: Arial, sans-serif; margin: 40px; } table { width: 50%; border-collapse: collapse; margin-bottom: 20px; } table, th, td { border: 1px solid #ddd; } th, td { padding: 10px; text-align: left; } th { background-color: #f2f2f2; } form { margin-top: 20px; } input[type=\"text\"] { margin: 5px 0; padding: 5px; width: 200px; } input[type=\"submit\"] { padding: 5px 15px; background-color: #4CAF50; color: white; border: none; cursor: pointer; } </style> </head> <body> <h1>Disciplines grades</h1> <table> <tr> <th>Discipline</th> <th>Grade</th> </tr> \"\"\" for subject, grade_list in grades.items(): grades_str = ', '.join(grade_list) response += f\"<tr><td>{subject}</td><td>{grades_str}</td></tr>\" response += \"\"\" </table> <h2>Add new grade</h2> <form method=\"POST\"> Discipline: <input type=\"text\" name=\"subject\"><br> Grade: <input type=\"text\" name=\"grade\"><br> <input type=\"submit\" value=\"Add\"> </form> </body> </html> \"\"\" return response def handle_client(client_socket): request = client_socket.recv(1024).decode() headers = request.split('\\r\\n') if len(headers) > 0: request_line = headers[0] method, path, _ = request_line.split() if method == 'GET': response_body = generate_html() response_headers = \"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n\" client_socket.sendall((response_headers + response_body).encode()) elif method == 'POST': body = request.split('\\r\\n\\r\\n')[1] params = dict(param.split('=') for param in body.split('&')) subject = params.get('subject', '').replace('+', ' ') grade = params.get('grade', '') if subject and grade: if subject in grades: grades[subject].append(grade) else: grades[subject] = [grade] response_headers = \"HTTP/1.1 303 See Other\\r\\nLocation: /\\r\\n\\r\\n\" client_socket.sendall(response_headers.encode()) client_socket.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 1234)) server_socket.listen() print(\"Server started\") while True: client_socket, client_address = server_socket.accept() client_thread = threading.Thread(target=handle_client, args=(client_socket,)) client_thread.start() \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e 2 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: 1. \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044f. \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447 \u0432 \u0432\u0438\u0434\u0435 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0432\u0438\u0434\u0435 \u043e\u0446\u0435\u043d\u043e\u043a 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0438\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (POST \u0438 GET), \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u044b\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e GET-\u0437\u0430\u043f\u0440\u043e\u0441, \u0442\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u0430 \u0435\u0441\u043b\u0438 POST, \u0442\u043e \u0438\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0445 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"LR_1/task5/#no5-","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440"},{"location":"LR_1/task5/#_1","text":"\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0432 Python.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:"},{"location":"LR_1/task5/#_2","text":"\u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: * \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. * \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f:"},{"location":"LR_1/task5/#_3","text":"","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"LR_1/task5/#serverpy","text":"import socket import threading grades = {} def generate_html(): response = \"\"\" <html> <head> <title>Disciplines grades</title> <style> body { font-family: Arial, sans-serif; margin: 40px; } table { width: 50%; border-collapse: collapse; margin-bottom: 20px; } table, th, td { border: 1px solid #ddd; } th, td { padding: 10px; text-align: left; } th { background-color: #f2f2f2; } form { margin-top: 20px; } input[type=\"text\"] { margin: 5px 0; padding: 5px; width: 200px; } input[type=\"submit\"] { padding: 5px 15px; background-color: #4CAF50; color: white; border: none; cursor: pointer; } </style> </head> <body> <h1>Disciplines grades</h1> <table> <tr> <th>Discipline</th> <th>Grade</th> </tr> \"\"\" for subject, grade_list in grades.items(): grades_str = ', '.join(grade_list) response += f\"<tr><td>{subject}</td><td>{grades_str}</td></tr>\" response += \"\"\" </table> <h2>Add new grade</h2> <form method=\"POST\"> Discipline: <input type=\"text\" name=\"subject\"><br> Grade: <input type=\"text\" name=\"grade\"><br> <input type=\"submit\" value=\"Add\"> </form> </body> </html> \"\"\" return response def handle_client(client_socket): request = client_socket.recv(1024).decode() headers = request.split('\\r\\n') if len(headers) > 0: request_line = headers[0] method, path, _ = request_line.split() if method == 'GET': response_body = generate_html() response_headers = \"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n\" client_socket.sendall((response_headers + response_body).encode()) elif method == 'POST': body = request.split('\\r\\n\\r\\n')[1] params = dict(param.split('=') for param in body.split('&')) subject = params.get('subject', '').replace('+', ' ') grade = params.get('grade', '') if subject and grade: if subject in grades: grades[subject].append(grade) else: grades[subject] = [grade] response_headers = \"HTTP/1.1 303 See Other\\r\\nLocation: /\\r\\n\\r\\n\" client_socket.sendall(response_headers.encode()) client_socket.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 1234)) server_socket.listen() print(\"Server started\") while True: client_socket, client_address = server_socket.accept() client_thread = threading.Thread(target=handle_client, args=(client_socket,)) client_thread.start()","title":"server.py"},{"location":"LR_1/task5/#_4","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e 2 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: 1. \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0441\u043b\u043e\u0432\u0430\u0440\u044f. \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043a\u043b\u044e\u0447 \u0432 \u0432\u0438\u0434\u0435 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0432\u0438\u0434\u0435 \u043e\u0446\u0435\u043d\u043e\u043a 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0438\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (POST \u0438 GET), \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0432\u044b\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0440\u0430\u0431\u043e\u0442\u0430. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e GET-\u0437\u0430\u043f\u0440\u043e\u0441, \u0442\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u0430 \u0435\u0441\u043b\u0438 POST, \u0442\u043e \u0438\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0445 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"},{"location":"LR_2/task/","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django \u0426\u0435\u043b\u044c: \u043e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2. \u0422\u0435\u043c\u0430: \"\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439\" \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c * \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f * \u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0442\u0435\u043b\u044f * \u0410\u0434\u0440\u0435\u0441 * \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 * \u0422\u0438\u043f\u044b \u043d\u043e\u043c\u0435\u0440\u043e\u0432 * \u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c * \u0412\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c * \u0423\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: * \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. * \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. * \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043d\u043e\u043c\u0435\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. * \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. * \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043b\u044c\u0446\u0435\u0432 \u043e\u0442\u0435\u043b\u044f \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0414\u0430\u043b\u0435\u0435 \u0441\u0440\u0430\u0437\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438 from django.core.validators import MinValueValidator, MaxValueValidator from django.db import models from django.contrib.auth.models import User class Hotel(models.Model): name = models.CharField(max_length=20) description = models.TextField() address = models.CharField(max_length=30) owner = models.CharField(max_length=30) class RoomType(models.Model): type = models.CharField(max_length=20) description = models.TextField() capacity = models.CharField(max_length=100) facilities = models.CharField(max_length=100) class Room(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, related_name=\"rooms\") type = models.ForeignKey(RoomType, on_delete=models.CASCADE) price = models.CharField(max_length=100) class Reservation(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE) room = models.ForeignKey(Room, on_delete=models.CASCADE) start_date = models.DateField() end_date = models.DateField() status = models.CharField(max_length=20, choices=[('checked_in', 'Checked In'), ('checked_out', 'Checked Out')], default='not_checked_in') class Review(models.Model): reservation = models.ForeignKey(Reservation, on_delete=models.CASCADE) rating = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(10)]) comment = models.TextField() \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0443\u0442\u0440\u044f\u043d\u043a\u0443 Django \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438, \u043d\u0430\u0448\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f. \u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043c\u043e\u0434\u0435\u043b\u044f\u043c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435: admin.site.register(Hotel) admin.site.register(Room) admin.site.register(RoomType) admin.site.register(Review) admin.site.register(Reservation) \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u043f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f (\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f + \u0432\u0445\u043e\u0434) \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438: class UserRegistrationForm(UserCreationForm): email = forms.EmailField(required=True) class Meta: model = User fields = ('username', 'email', 'password1', 'password2') widgets = { 'username': forms.TextInput(), 'email': forms.EmailInput(), 'password1': forms.PasswordInput(), 'password2': forms.PasswordInput(), } def __init__(self, *args, **kwargs): super().__init__(*args, **kwargs) for field in ['username', 'email', 'password1', 'password2']: self.fields[field].help_text = None \u0418 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430: def user_registration(request): if request.method == 'POST': form = UserRegistrationForm(request.POST) if form.is_valid(): user = form.save() login(request, user) return redirect('login') else: form = UserRegistrationForm() return render(request, 'registration.html', {'form': form}) \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u043e\u0442\u0435\u043b\u044f\u043c\u0438. \u041d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043e\u0442\u0435\u043b\u0435\u0439 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: def get_all_hotels(request): hotels = Hotel.objects.all() return render(request, 'hotels.html', {'hotels': hotels}) def get_hotel_info(request, hotel_id): try: hotel = Hotel.objects.get(pk=hotel_id) except: raise Http404(\"Hotel does not exist\") rooms = hotel.rooms.all() return render(request, 'hotel_info.html', {'hotel': hotel, 'rooms': rooms}) \u0418\u0442\u043e\u0433: \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u0442\u0430\u043f - \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f / \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0432\u043e\u0430\u043d\u0438\u044f / \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c! @login_required def get_all_reservations(request): reservations = Reservation.objects.filter(user=request.user) return render(request, 'all_reservations.html', {'reservations': reservations}) @login_required def create_reservation(request, room_id): try: room = Room.objects.get(pk=room_id) except Room.DoesNotExist: raise Http404(\"Room does not exist\") if request.method == 'POST': start_date = request.POST.get('start_date') end_date = request.POST.get('end_date') reservation = Reservation(user=request.user, hotel=room.hotel, room=room, start_date=start_date, end_date=end_date) reservation.save() return redirect('all_reservations') return render(request, 'create_reservation.html', {'room': room}) @login_required def update_reservation(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': reservation.start_date = request.POST.get('start_date') reservation.end_date = request.POST.get('end_date') reservation.save() return redirect('all_reservations') return render(request, 'update_reservation.html', {'reservation': reservation}) @login_required def delete_reservation(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': reservation.delete() return redirect('all_reservations') return render(request, 'delete_reservation.html', {'reservation': reservation}) \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u0442\u0430\u043f - \u043e\u0442\u0437\u044b\u0432\u044b. \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043e\u0442\u0437\u044b\u0432\u044b, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439 @login_required def create_review(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id, user=request.user) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.reservation = reservation review.user = request.user review.save() return redirect('all_reservations') else: form = ReviewForm() return render(request, 'create_review.html', {'form': form, 'reservation': reservation}) @login_required def get_all_reviews(request, room_id): try: room = Room.objects.get(pk=room_id) except Room.DoesNotExist: raise Http404(\"Room does not exist\") reviews = Review.objects.filter(reservation__room=room) return render(request, 'all_reviews.html', {'room': room, 'reviews': reviews}) \u0418\u0442\u043e\u0433: \u041d\u0430\u0441\u0442\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0430\u0434\u043c\u0438\u043d\u043a\u0435. \u0422\u0443\u0442 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 actions \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Reservation class ReservationAdmin(admin.ModelAdmin): list_display = ('user', 'hotel', 'start_date', 'end_date', 'status') actions = ['check_in', 'check_out'] list_filter = (LastMonthFilter,) def check_in(self, request, queryset): queryset.update(status='checked_in') def check_out(self, request, queryset): queryset.update(status='checked_out') \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435\u043c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043e\u043d \u043f\u0440\u0438\u0440\u0430\u0432\u043d\u0435\u043d \u043a \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c\u0443. \u0414\u0430\u043b\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c \u0438, \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u0441\u043d\u0438\u043c\u0430\u0442\u044c \u0431\u0440\u043e\u043d\u0438 \u0441 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0418 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c - \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f. \u0418\u043c\u0435\u043d\u043d\u043e \u0442\u0430\u043a \u043c\u043d\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0431\u043b\u043e\u043a, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u043c \u0431\u0440\u043e\u043d\u0438\u043e\u0440\u0432\u0430\u043d\u0438\u0439 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u0438 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0431\u0443\u0434\u0435\u043c \u0435\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c class LastMonthFilter(admin.SimpleListFilter): title = 'Data' parameter_name = 'last_month_reservations' def lookups(self, request, model_admin): return [('last_month_reservations', 'Last month reservations')] def queryset(self, request, queryset): if self.value() == 'last_month': return queryset.filter(start_date__gte=timezone.now() - timezone.timedelta(days=30)) return queryset","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"LR_2/task/#django","text":"\u0426\u0435\u043b\u044c: \u043e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2. \u0422\u0435\u043c\u0430: \"\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439\" \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c * \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f * \u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0442\u0435\u043b\u044f * \u0410\u0434\u0440\u0435\u0441 * \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 * \u0422\u0438\u043f\u044b \u043d\u043e\u043c\u0435\u0440\u043e\u0432 * \u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c * \u0412\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c * \u0423\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: * \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. * \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. * \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043d\u043e\u043c\u0435\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. * \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. * \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043b\u044c\u0446\u0435\u0432 \u043e\u0442\u0435\u043b\u044f \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u0425\u043e\u0434 \u0440\u0430\u0431\u043e\u0442\u044b: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0414\u0430\u043b\u0435\u0435 \u0441\u0440\u0430\u0437\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438 from django.core.validators import MinValueValidator, MaxValueValidator from django.db import models from django.contrib.auth.models import User class Hotel(models.Model): name = models.CharField(max_length=20) description = models.TextField() address = models.CharField(max_length=30) owner = models.CharField(max_length=30) class RoomType(models.Model): type = models.CharField(max_length=20) description = models.TextField() capacity = models.CharField(max_length=100) facilities = models.CharField(max_length=100) class Room(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE, related_name=\"rooms\") type = models.ForeignKey(RoomType, on_delete=models.CASCADE) price = models.CharField(max_length=100) class Reservation(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE) room = models.ForeignKey(Room, on_delete=models.CASCADE) start_date = models.DateField() end_date = models.DateField() status = models.CharField(max_length=20, choices=[('checked_in', 'Checked In'), ('checked_out', 'Checked Out')], default='not_checked_in') class Review(models.Model): reservation = models.ForeignKey(Reservation, on_delete=models.CASCADE) rating = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(10)]) comment = models.TextField() \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0443\u0442\u0440\u044f\u043d\u043a\u0443 Django \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438, \u043d\u0430\u0448\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f. \u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043c\u043e\u0434\u0435\u043b\u044f\u043c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435: admin.site.register(Hotel) admin.site.register(Room) admin.site.register(RoomType) admin.site.register(Review) admin.site.register(Reservation) \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u043f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041d\u0430\u0447\u043d\u0435\u043c \u0441 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f (\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f + \u0432\u0445\u043e\u0434) \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438: class UserRegistrationForm(UserCreationForm): email = forms.EmailField(required=True) class Meta: model = User fields = ('username', 'email', 'password1', 'password2') widgets = { 'username': forms.TextInput(), 'email': forms.EmailInput(), 'password1': forms.PasswordInput(), 'password2': forms.PasswordInput(), } def __init__(self, *args, **kwargs): super().__init__(*args, **kwargs) for field in ['username', 'email', 'password1', 'password2']: self.fields[field].help_text = None \u0418 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430: def user_registration(request): if request.method == 'POST': form = UserRegistrationForm(request.POST) if form.is_valid(): user = form.save() login(request, user) return redirect('login') else: form = UserRegistrationForm() return render(request, 'registration.html', {'form': form}) \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 \u043e\u0442\u0435\u043b\u044f\u043c\u0438. \u041d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u044b \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043e\u0442\u0435\u043b\u0435\u0439 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: def get_all_hotels(request): hotels = Hotel.objects.all() return render(request, 'hotels.html', {'hotels': hotels}) def get_hotel_info(request, hotel_id): try: hotel = Hotel.objects.get(pk=hotel_id) except: raise Http404(\"Hotel does not exist\") rooms = hotel.rooms.all() return render(request, 'hotel_info.html', {'hotel': hotel, 'rooms': rooms}) \u0418\u0442\u043e\u0433: \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u0442\u0430\u043f - \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f / \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0432\u043e\u0430\u043d\u0438\u044f / \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c! @login_required def get_all_reservations(request): reservations = Reservation.objects.filter(user=request.user) return render(request, 'all_reservations.html', {'reservations': reservations}) @login_required def create_reservation(request, room_id): try: room = Room.objects.get(pk=room_id) except Room.DoesNotExist: raise Http404(\"Room does not exist\") if request.method == 'POST': start_date = request.POST.get('start_date') end_date = request.POST.get('end_date') reservation = Reservation(user=request.user, hotel=room.hotel, room=room, start_date=start_date, end_date=end_date) reservation.save() return redirect('all_reservations') return render(request, 'create_reservation.html', {'room': room}) @login_required def update_reservation(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': reservation.start_date = request.POST.get('start_date') reservation.end_date = request.POST.get('end_date') reservation.save() return redirect('all_reservations') return render(request, 'update_reservation.html', {'reservation': reservation}) @login_required def delete_reservation(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': reservation.delete() return redirect('all_reservations') return render(request, 'delete_reservation.html', {'reservation': reservation}) \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u044d\u0442\u0430\u043f - \u043e\u0442\u0437\u044b\u0432\u044b. \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043e\u0442\u0437\u044b\u0432\u044b, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0439 @login_required def create_review(request, reservation_id): try: reservation = Reservation.objects.get(pk=reservation_id, user=request.user) except Reservation.DoesNotExist: raise Http404(\"Reservation does not exist\") if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.reservation = reservation review.user = request.user review.save() return redirect('all_reservations') else: form = ReviewForm() return render(request, 'create_review.html', {'form': form, 'reservation': reservation}) @login_required def get_all_reviews(request, room_id): try: room = Room.objects.get(pk=room_id) except Room.DoesNotExist: raise Http404(\"Room does not exist\") reviews = Review.objects.filter(reservation__room=room) return render(request, 'all_reviews.html', {'room': room, 'reviews': reviews}) \u0418\u0442\u043e\u0433: \u041d\u0430\u0441\u0442\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0430\u0434\u043c\u0438\u043d\u043a\u0435. \u0422\u0443\u0442 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 actions \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Reservation class ReservationAdmin(admin.ModelAdmin): list_display = ('user', 'hotel', 'start_date', 'end_date', 'status') actions = ['check_in', 'check_out'] list_filter = (LastMonthFilter,) def check_in(self, request, queryset): queryset.update(status='checked_in') def check_out(self, request, queryset): queryset.update(status='checked_out') \u0422\u0435\u043f\u0435\u0440\u044c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435\u043c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043e\u043d \u043f\u0440\u0438\u0440\u0430\u0432\u043d\u0435\u043d \u043a \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c\u0443. \u0414\u0430\u043b\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c \u0438, \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u0441\u043d\u0438\u043c\u0430\u0442\u044c \u0431\u0440\u043e\u043d\u0438 \u0441 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u0432\u043e\u0430\u0442\u0435\u043b\u044f \u0418 \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c - \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f. \u0418\u043c\u0435\u043d\u043d\u043e \u0442\u0430\u043a \u043c\u043d\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0431\u043b\u043e\u043a, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u043c \u0431\u0440\u043e\u043d\u0438\u043e\u0440\u0432\u0430\u043d\u0438\u0439 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0438\u043b\u044c\u0442\u0440 \u0438 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0431\u0443\u0434\u0435\u043c \u0435\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c class LastMonthFilter(admin.SimpleListFilter): title = 'Data' parameter_name = 'last_month_reservations' def lookups(self, request, model_admin): return [('last_month_reservations', 'Last month reservations')] def queryset(self, request, queryset): if self.value() == 'last_month': return queryset.filter(start_date__gte=timezone.now() - timezone.timedelta(days=30)) return queryset","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u043d\u0430 django"},{"location":"PR_2/task1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.1. \"Django Web framework. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\" \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u0417\u0430\u0434\u0430\u0447\u0430 \u21161. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Django Web framework. \u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430: \u0417\u0430\u0434\u0430\u0447\u0430 \u21162. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c: 1. \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 (\u0444\u0430\u0438\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u0434\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\" \u0438 \"\u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0435\u043c\u0443 \u043a\u043b\u044e\u0447\u0443 2. \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 (id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, id \u0432\u0430\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u0434\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430, \u0434\u0430\u0442\u0430 \u043a\u043e\u043d\u0446\u0430). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446\" \u0438 \"\u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0438\u043c \u043a\u043b\u044e\u0447\u0430\u043c 3. \u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c (\u0433\u043e\u0441 \u043d\u043e\u043c\u0435\u0440, \u043c\u0430\u0440\u043a\u0430, \u043c\u043e\u0434\u0435\u043b\u044c, \u0446\u0432\u0435\u0442). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0435\u043c\u0443 \u043a\u043b\u044e\u0447\u0443 4. \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 (id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043d\u043e\u043c\u0435\u0440, \u0442\u0438\u043f6 \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438) \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430: from django.db import models class CarOwner(models.Model): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) class Car(models.Model): gos_number = models.CharField(max_length=15) brand = models.CharField(max_length=20) model = models.CharField(max_length=20) color = models.CharField(max_length=30, null=True) class Possession(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE, null=True) car_id = models.ForeignKey(Car, on_delete=models.CASCADE, null=True) date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) class DrivingLicense(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE) license_number = models.CharField(max_length=10) type = models.CharField(max_length=10) date_issue = models.DateTimeField() \u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u0445 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u0442\u043a\u0440\u043e\u0435\u043c DBbrowser \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u0411\u0414: \u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0448\u043b\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0431\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b 4 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u0442\u0430\u0431\u043b\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438 \u0417\u0430\u0440\u0435\u0433\u0435\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438 from django.contrib import admin from .models import CarOwner, Car, Possession, DrivingLicense admin.site.register(CarOwner) admin.site.register(Car) admin.site.register(Possession) admin.site.register(DrivingLicense) \u0422\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u0439\u0434\u0435\u043c \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c. \u0412\u0441\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0432\u0443\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, 4 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u0414\u0430\u043b\u0435\u0435 \u0441\u0432\u044f\u0437\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0441 \u0442\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438, \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0434\u0430\u0442\u0430\u043c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. def car_owner(request, owner_id): try: owner = CarOwner.objects.get(pk=owner_id) except CarOwner.DoesNotExist: raise Http404(\"Car owner does not exist\") return render(request, 'car_owner.html', {'owner': owner}) \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 html-\u0448\u0430\u0431\u043b\u043e\u043d\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430. <body> <h1>Car Owner Info</h1> <p><strong>First name:</strong> {{ owner.first_name }}</p> <p><strong>Last name:</strong> {{ owner.last_name }}</p> <p><strong>Birth Date:</strong> {{ owner.date_of_birth }}</p> </body> \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0430\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u0435\u0439 \u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0444\u0430\u0439\u043b urls.py \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 from django.contrib import admin from django.urls import path, include urlpatterns = [ path('admin/', admin.site.urls), path('', include('project_first_app.urls')), ] \u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f urls.py \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0435\u0440\u0430 urlpatterns = [ path('owner/<int:owner_id>/', views.get_owner, name='get_owner'), ] \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u043e\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u201c127.0.0.1:8000/owner/1\u201d","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"PR_2/task1/#no21-django-web-framework","text":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.1. \"Django Web framework. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\""},{"location":"PR_2/task1/#no1-django-web-framework","text":"\u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430:","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21161. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 Django Web framework."},{"location":"PR_2/task1/#no2","text":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c: 1. \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 (\u0444\u0430\u0438\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u0434\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\" \u0438 \"\u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0435\u043c\u0443 \u043a\u043b\u044e\u0447\u0443 2. \u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435 (id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, id \u0432\u0430\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u0434\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430, \u0434\u0430\u0442\u0430 \u043a\u043e\u043d\u0446\u0430). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446\" \u0438 \"\u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0438\u043c \u043a\u043b\u044e\u0447\u0430\u043c 3. \u0410\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c (\u0433\u043e\u0441 \u043d\u043e\u043c\u0435\u0440, \u043c\u0430\u0440\u043a\u0430, \u043c\u043e\u0434\u0435\u043b\u044c, \u0446\u0432\u0435\u0442). \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\" \u043f\u043e \u0432\u043d\u0435\u0448\u043d\u0435\u043c\u0443 \u043a\u043b\u044e\u0447\u0443 4. \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 (id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043d\u043e\u043c\u0435\u0440, \u0442\u0438\u043f6 \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438)","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21162. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430."},{"location":"PR_2/task1/#_1","text":"from django.db import models class CarOwner(models.Model): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) class Car(models.Model): gos_number = models.CharField(max_length=15) brand = models.CharField(max_length=20) model = models.CharField(max_length=20) color = models.CharField(max_length=30, null=True) class Possession(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE, null=True) car_id = models.ForeignKey(Car, on_delete=models.CASCADE, null=True) date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) class DrivingLicense(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE) license_number = models.CharField(max_length=10) type = models.CharField(max_length=10) date_issue = models.DateTimeField() \u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u0445 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u0442\u043a\u0440\u043e\u0435\u043c DBbrowser \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u0411\u0414: \u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0448\u043b\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e, \u0431\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b 4 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0434\u0440\u0443\u0433\u0438\u0445 \u0442\u0430\u0431\u043b\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django","title":"\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430:"},{"location":"PR_2/task1/#no3-","text":"\u0417\u0430\u0440\u0435\u0433\u0435\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438 from django.contrib import admin from .models import CarOwner, Car, Possession, DrivingLicense admin.site.register(CarOwner) admin.site.register(Car) admin.site.register(Possession) admin.site.register(DrivingLicense) \u0422\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u0439\u0434\u0435\u043c \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c. \u0412\u0441\u0435 \u043f\u0440\u043e\u0448\u043b\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0432\u0443\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, 4 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u0414\u0430\u043b\u0435\u0435 \u0441\u0432\u044f\u0437\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0441 \u0442\u0440\u0435\u043c\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438, \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u043f\u043e \u0434\u0430\u0442\u0430\u043c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438"},{"location":"PR_2/task1/#no4","text":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. def car_owner(request, owner_id): try: owner = CarOwner.objects.get(pk=owner_id) except CarOwner.DoesNotExist: raise Http404(\"Car owner does not exist\") return render(request, 'car_owner.html', {'owner': owner}) \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 html-\u0448\u0430\u0431\u043b\u043e\u043d\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430. <body> <h1>Car Owner Info</h1> <p><strong>First name:</strong> {{ owner.first_name }}</p> <p><strong>Last name:</strong> {{ owner.last_name }}</p> <p><strong>Birth Date:</strong> {{ owner.date_of_birth }}</p> </body>","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"PR_2/task1/#no5","text":"\u0418\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0444\u0430\u0439\u043b urls.py \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 from django.contrib import admin from django.urls import path, include urlpatterns = [ path('admin/', admin.site.urls), path('', include('project_first_app.urls')), ] \u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f urls.py \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0435\u0440\u0430 urlpatterns = [ path('owner/<int:owner_id>/', views.get_owner, name='get_owner'), ] \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u043e\u043c \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 \u201c127.0.0.1:8000/owner/1\u201d","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0430\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u0435\u0439"},{"location":"PR_2/task2/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.2. \"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 CRUD\" \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 CRUD(Create, read, update and delete) \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. \u0414\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u201c\u041c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c\u201d \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c, \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435\u043c \u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c. class CarOwner(models.Model): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) cars = models.ManyToManyField(Car, through=\"Possession\") def __str__(self): return f\"{self.first_name} {self.last_name}, {self.date_of_birth}\" \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 def get_all_owners(request): try: all_owners = CarOwner.objects.all() except CarOwner.DoesNotExist: raise Http404(\"Empty table\") return render(request, 'all_owners.html', {'all_owners': all_owners}) \u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430: \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0430\u043b\u044c\u043d\u044b\u0439 html-\u0448\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 urls.py urlpatterns = [ path('owner/<int:owner_id>/', views.get_owner, name='get_owner'), path('owners/', views.get_all_owners, name='get_all_owners'), ] \u0427\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u0445 \u0432 \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c: \u0418 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0443\u0442\u0435\u043c \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u0432\u044b\u0432\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e id, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043e \u0442\u0440\u0435\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u0445. \u0414\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 (views) \u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u044b (temlates). \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0444\u043e\u0440\u043c\u0430\u043c\u0438 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 from django import forms from .models import CarOwner class CreateCarOwnerForm(forms.ModelForm): class Meta: model = CarOwner fields = [\"first_name\", \"last_name\", \"date_of_birth\"] \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u0444 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u043e\u0440\u043c\u044b def create_owner_form(request): context = {} form = CreateCarOwnerForm(request.POST or None) if form.is_valid(): form.save() return redirect('get_all_owners') context['form'] = form return render(request, \"create_owner.html\", context)","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"PR_2/task2/#no22-crud","text":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u0434\u0430\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 CRUD(Create, read, update and delete) \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django WEB \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.2. \"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 CRUD\""},{"location":"PR_2/task2/#no1","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c, \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435\u043c \u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c. class CarOwner(models.Model): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) cars = models.ManyToManyField(Car, through=\"Possession\") def __str__(self): return f\"{self.first_name} {self.last_name}, {self.date_of_birth}\"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. \u0414\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0432\u044f\u0437\u0438 \u201c\u041c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c\u201d"},{"location":"PR_2/task2/#no2","text":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 def get_all_owners(request): try: all_owners = CarOwner.objects.all() except CarOwner.DoesNotExist: raise Http404(\"Empty table\") return render(request, 'all_owners.html', {'all_owners': all_owners}) \u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430: \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0430\u043b\u044c\u043d\u044b\u0439 html-\u0448\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043c\u0430\u0440\u0448\u0440\u0443\u0442 \u0432 urls.py urlpatterns = [ path('owner/<int:owner_id>/', views.get_owner, name='get_owner'), path('owners/', views.get_all_owners, name='get_all_owners'), ] \u0427\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u0445 \u0432 \u043d\u0430\u0448\u0443 \u043c\u043e\u0434\u0435\u043b\u044c: \u0418 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0443\u0442\u0435\u043c \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u0432\u044b\u0432\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e id, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043e \u0442\u0440\u0435\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u0445. \u0414\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440 (views) \u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u044b (temlates).","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438"},{"location":"PR_2/task2/#no3","text":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 from django import forms from .models import CarOwner class CreateCarOwnerForm(forms.ModelForm): class Meta: model = CarOwner fields = [\"first_name\", \"last_name\", \"date_of_birth\"] \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u0444 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0444\u043e\u0440\u043c\u044b def create_owner_form(request): context = {} form = CreateCarOwnerForm(request.POST or None) if form.is_valid(): form.save() return redirect('get_all_owners') context['form'] = form return render(request, \"create_owner.html\", context)","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0444\u043e\u0440\u043c\u0430\u043c\u0438 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438"},{"location":"PR_2/task3/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.3. \"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\" \u0421\u0434\u0435\u043b\u0430\u0435\u043c \u201c\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u201d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0435\u0433\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438, \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e \u043d\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0439 \u0430\u0434\u0440\u0435\u0441, \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c. class CarOwner(AbstractUser): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) passport = models.CharField(max_length=10, null=True) address = models.CharField(max_length=50, null=True) nationality = models.CharField(max_length=10, null=True) cars = models.ManyToManyField(Car, through=\"Possession\") AUTH_USER_MODEL = 'project_first_app.CarOwner'","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"PR_2/task3/#no23","text":"\u0421\u0434\u0435\u043b\u0430\u0435\u043c \u201c\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u201d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0435\u0433\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438, \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e \u043d\u0435\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0430\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0439 \u0430\u0434\u0440\u0435\u0441, \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c. class CarOwner(AbstractUser): first_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) date_of_birth = models.DateField(null=True) passport = models.CharField(max_length=10, null=True) address = models.CharField(max_length=50, null=True) nationality = models.CharField(max_length=10, null=True) cars = models.ManyToManyField(Car, through=\"Possession\") AUTH_USER_MODEL = 'project_first_app.CarOwner'","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162.3. \"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\""},{"location":"PR_3/task1/task1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1. \"Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\" \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 \u0432 Django ORM. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c. \u041e\u0442\u043a\u0440\u043e\u0435\u043c \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 \u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c \u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u041d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435 \u0447\u0435\u0440\u0435\u0437 \u0430\u0434\u043c\u0438\u043d\u0441\u043a\u0443\u044e \u043f\u0430\u043d\u0435\u043b\u044c: \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u0441\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b: \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: - \u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438 class Possession(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE, null=True, related_name='possessions') car_id = models.ForeignKey(Car, on_delete=models.CASCADE, null=True, related_name='car_possessions') date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u043d\u0442\u043d\u043e\u0439 \u043c\u0430\u0440\u043a\u0438. \u0412 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 Subaru \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u043d\u0442\u043d\u044b\u043c\u0438 \u0438\u043c\u0435\u043d\u0435\u043c (\u0410\u043d\u0433\u0435\u043b\u0438\u043d\u0430) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2018 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0410\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044f \u0438 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: - \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u0442\u0443 \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f - \u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435 - \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f - \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 - \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043c\u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044e \u0438 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e.","title":"Task1"},{"location":"PR_3/task1/task1/#no31-django-web-framework","text":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b: \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 \u0432 Django ORM.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1. \"Django Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\""},{"location":"PR_3/task1/task1/#no1","text":"\u0411\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u043c. \u041e\u0442\u043a\u0440\u043e\u0435\u043c \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440 \u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c \u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u041d\u0438\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u044b \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438 \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446 \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435 \u0447\u0435\u0440\u0435\u0437 \u0430\u0434\u043c\u0438\u043d\u0441\u043a\u0443\u044e \u043f\u0430\u043d\u0435\u043b\u044c: \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u0441\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432"},{"location":"PR_3/task1/task1/#no2","text":"\u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: - \u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438 class Possession(models.Model): owner_id = models.ForeignKey(CarOwner, on_delete=models.CASCADE, null=True, related_name='possessions') car_id = models.ForeignKey(Car, on_delete=models.CASCADE, null=True, related_name='car_possessions') date_start = models.DateTimeField() date_end = models.DateTimeField(null=True) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u043d\u0442\u043d\u043e\u0439 \u043c\u0430\u0440\u043a\u0438. \u0412 \u043c\u043e\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 Subaru \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u043d\u0442\u043d\u044b\u043c\u0438 \u0438\u043c\u0435\u043d\u0435\u043c (\u0410\u043d\u0433\u0435\u043b\u0438\u043d\u0430) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2018","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"PR_3/task1/task1/#no3","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: - \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u0442\u0443 \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f - \u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435 - \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f - \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 - \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163. \u0410\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044f \u0438 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"PR_3/task1/task1/#_1","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043c\u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044e \u0438 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435:"}]}